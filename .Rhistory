library(tidytable)
data=fread("Data/Online Retail.csv")
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"]
library(data.table)
library(tidyverse)
library(tidytable)
data=fread("Data/Online Retail.csv")
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
library(data.table)
library(tidyverse)
library(tidytable)
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
nrow(data)
library(data.table)
library(tidyverse)
library(tidytable)
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(data.table)
library(readr)
library(microbenchmark)
system.time(read_csv("Data/Online Retail.csv"))
system.time(fread("Data/Online Retail.csv"))
system.time(read.csv("Data/Online Retail.csv"))
library(data.table)
library(tidyverse)
library(tidytable)
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
melt(data,id.vars = "Country",
measure.vars  = c("Country", "UnitPrice"),
variable.name = "Variable",
value.name    = "Value")
melt(data,id.vars = "Country",
measure.vars  = c("Country", "UnitPrice"),
variable.name = "Variable",
value.name    = "UnitPrice")
library(dplyr)
library(dtplyr)
library(tidytable)
library(data.table)
# Sample data (assuming 'data' is a dataframe)
data <- data.frame(
Country = rep(c("USA", "Canada"), 5000),
UnitPrice = rnorm(10000)
)
# Convert data to data.table for data.table operations
setDT(data)
# Benchmarking using dplyr
dplyr_time <- system.time({
data %>%
arrange(UnitPrice)
})
# Benchmarking using tidytable
tidytable_time <- system.time({
data %>%
as_tidy_table() %>%
arrange(UnitPrice)
})
library(dplyr)
library(dtplyr)
library(tidytable)
library(data.table)
# Sample data (assuming 'data' is a dataframe)
data <- data.frame(
Country = rep(c("USA", "Canada"), 5000),
UnitPrice = rnorm(10000)
)
# Convert data to data.table for data.table operations
setDT(data)
# Benchmarking using dplyr
dplyr_time <- system.time({
data %>%
arrange(UnitPrice)
})
# Benchmarking using tidytable
tidytable_time <- system.time({
data %>%
tidytable() %>%
arrange(UnitPrice)
})
# Benchmarking using dtplyr
dtplyr_time <- system.time({
data %>%
lazy_dt() %>%
arrange(UnitPrice)
})
# Benchmarking using data.table
data_table_time <- system.time({
data[
order(UnitPrice)
]
})
# Benchmarking using pandas (Python)
library(reticulate)
py_run_string('import pandas as pd')
library(dplyr)
library(dtplyr)
library(tidytable)
library(data.table)
# Sample data (assuming 'data' is a dataframe)
data <- data.frame(
Country = rep(c("USA", "Canada"), 5000),
UnitPrice = rnorm(10000)
)
# Convert data to data.table for data.table operations
setDT(data)
# Benchmarking using dplyr
dplyr_time <- system.time({
data %>%
arrange(UnitPrice)
})
# Benchmarking using tidytable
tidytable_time <- system.time({
data %>%
tidytable() %>%
arrange(UnitPrice)
})
# Benchmarking using dtplyr
dtplyr_time <- system.time({
data %>%
lazy_dt() %>%
arrange(UnitPrice)
})
# Benchmarking using data.table
data_table_time <- system.time({
data[
order(UnitPrice)
]
})
# Display results in a tabular format
benchmark_results <- data.frame(
func_tested = c("arrange"),
data.table = data_table_time[3],
tidytable = tidytable_time[3],
dtplyr = dtplyr_time[3],
tidyverse = dplyr_time[3]
)
print(benchmark_results)
melt(data,id.vars = "Country",
measure.vars  = c("Country", "UnitPrice"),
variable.name = "Variable",
value.name    = "UnitPrice")
melt(data,id.vars = "Country",
measure.vars  = c("Country", "UnitPrice"),
variable.name = "Variable",
value.name    = "UnitPrice")
melt(data,id.vars = "Country",
measure.vars  = c("Country", "UnitPrice"),
variable.name = "Variable",
value.name    = "UnitPrice")
library(dplyr)
library(data.table)
library(readr)
library(microbenchmark)
result=data.frame("Package"=c("readr","data.table","tidytable"),
"Time_Comparison"=c(system.time(read_csv("Data/Online Retail.csv")),system.time(fread("Data/Online Retail.csv")),system.time(read.csv("Data/Online Retail.csv"))))
#system.time(read_csv("Data/Online Retail.csv"))
#system.time(fread("Data/Online Retail.csv"))
#system.time(read.csv("Data/Online Retail.csv"))
library(dplyr)
library(data.table)
library(readr)
library(microbenchmark)
result=data.frame("Package"=c("readr","data.table","tidytable"),
"Time_Comparison"=c(system.time(read_csv("Data/Online Retail.csv")),system.time(fread("Data/Online Retail.csv")),system.time(read.csv("Data/Online Retail.csv"))))
result
#system.time(read_csv("Data/Online Retail.csv"))
#system.time(fread("Data/Online Retail.csv"))
#system.time(read.csv("Data/Online Retail.csv"))
library(dplyr)
library(data.table)
library(readr)
library(microbenchmark)
result=data.frame("Package"=c("readr","data.table","tidytable"),
"Time_Comparison"=c(system.time(read_csv("Data/Online Retail.csv")),system.time(fread("Data/Online Retail.csv")),system.time(read.csv("Data/Online Retail.csv")))) %>% t()
result
#system.time(read_csv("Data/Online Retail.csv"))
#system.time(fread("Data/Online Retail.csv"))
#system.time(read.csv("Data/Online Retail.csv"))
library(dplyr)
library(data.table)
library(readr)
print("readr_r time")
system.time(read_csv("Data/Online Retail.csv"))
print("data.table time")
system.time(fread("Data/Online Retail.csv"))
print("Base R Time")
system.time(read.csv("Data/Online Retail.csv"))
library(dplyr)
library(data.table)
library(readr)
system.time(read_csv("Data/Online Retail.csv"))
system.time(fread("Data/Online Retail.csv"))
system.time(read.csv("Data/Online Retail.csv"))
library(data.table)
library(tidyverse)
library(tidytable)
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
library(data.table)
library(tidyverse)
library(tidytable)
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
View(data1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(data.table)
library(readr)
system.time(read_csv("Data/Online Retail.csv"))
system.time(fread("Data/Online Retail.csv"))
system.time(read.csv("Data/Online Retail.csv"))
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
system.time(read_csv("Data/Online Retail.csv"))
system.time(fread("Data/Online Retail.csv"))
system.time(read.csv("Data/Online Retail.csv"))
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(Country) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=Country))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="Country"])
View(data)
#Using mutate
system.time(data %>% mutate("Pricing"=UnitPrice*Quantity))
#using tidytable
system.time(data %>% mutate.("Pricing"=UnitPrice*Quantity))
#using datatable
system.time(data[, c("Pricing") := .(UnitPrice*Quantity)])
#Using mutate
system.time(data %>% mutate("Pricing"=UnitPrice*Quantity))
#using tidytable
system.time(data %>% mutate.("Pricing"=UnitPrice*Quantity))
#using datatable
system.time(data[, c("Pricing") := .(UnitPrice*Quantity)])
View(data)
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(CustomerID) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=CustomerID))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="CustomerID"])
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
system.time(read_csv("Data/Online Retail.csv"))
system.time(fread("Data/Online Retail.csv"))
system.time(read.csv("Data/Online Retail.csv"))
data=fread("Data/Online Retail.csv")
data=rbind(data,data)
#Grouping data using dplyr
system.time(data %>% group_by(CustomerID) %>% summarise("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice)))
# Grouping using tidytable Package
system.time(data %>% summarise.("Unit_Price_Sum"=sum(UnitPrice),"Unit_Price_Avg"=mean(UnitPrice),.by=CustomerID))
#Grouping using data.table Package
system.time(setDT(data)[, .(Unit_Price_Sum = sum(UnitPrice),
Unit_Price_Avg  = mean(UnitPrice)),by="CustomerID"])
#Using mutate
system.time(data %>% mutate("Pricing"=UnitPrice*Quantity))
#using tidytable
system.time(data %>% mutate.("Pricing"=UnitPrice*Quantity))
#using datatable
system.time(data[, c("Pricing") := .(UnitPrice*Quantity)])
#Using mutate
system.time(data %>% mutate("Pricing"=UnitPrice*Quantity))
#using tidytable
system.time(data %>% mutate.("Pricing"=UnitPrice*Quantity))
#using datatable
system.time(data[, c("Pricing") := .(UnitPrice*Quantity)])
#Using mutate
system.time(data %>% mutate("Pricing"=UnitPrice*Quantity))
#using tidytable
system.time(data %>% mutate.("Pricing"=UnitPrice*Quantity))
#using datatable
system.time(data[, c("Pricing") := .(UnitPrice*Quantity)])
#Using mutate
system.time(data %>% mutate("Pricing"=UnitPrice*Quantity))
#using tidytable
system.time(data %>% mutate.("Pricing"=UnitPrice*Quantity))
#using datatable
system.time(data[, c("Pricing") := .(UnitPrice*Quantity)])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
system.time(readr::read_csv("Data/household_power_consumption.csv"))
# Reading dataset using data.table fread() function
system.time(fread("Data/household_power_consumption.csv"))
# Reading dataset using  utils read.csv() function
system.time(utils::read.csv("Data/household_power_consumption.csv"))
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
system.time(readr::read_csv("Data/household_power_consumption.csv"))
# Reading dataset using data.table fread() function
system.time(fread("Data/household_power_consumption.csv"))
# Reading dataset using  utils read.csv() function
system.time(utils::read.csv("Data/household_power_consumption.csv"))
data=fread("Data/household_power_consumption.csv")
#Retreive year from Date column
data$year=sub(".*-(\\d{4})", "\\1", data$Date)
# Replace NA with zero
data[is.na(data)] <- 0
#Grouping data using dplyr
system.time(data %>% group_by(year) %>% summarise("Intensity_Sum"=sum(as.numeric(Global_intensity)),"Mean_Voltage"=mean(as.numeric(Voltage))))
# Grouping using tidytable Package
system.time(data %>% summarise.("Intensity_Sum"=sum(as.numeric(Global_intensity)),"Mean_Voltage"=mean(as.numeric(Voltage)),.by=year))
#Grouping using data.table Package
system.time(setDT(data)[, .(Intensity_Sum = sum(as.numeric(Global_intensity)),Mean_Voltage  = mean(as.numeric(Voltage))),by="year"])
#Using mutate
data$Global_active_power<-as.numeric(data$Global_active_power)
data$Global_reactive_power<-as.numeric(data$Global_reactive_power)
system.time(data %>% mutate("Global"=Global_active_power*Global_reactive_power))
#using tidytable
system.time(data %>% mutate.("Global"=Global_active_power*Global_reactive_power))
#using datatable
system.time(data[, c("Global") := .(Global_active_power*Global_reactive_power)])
#Using mutate
data$Global_active_power<-as.numeric(data$Global_active_power)
data$Global_reactive_power<-as.numeric(data$Global_reactive_power)
system.time(data %>% mutate("Global"=Global_active_power*Global_reactive_power))
#using tidytable
system.time(data %>% mutate.("Global"=Global_active_power*Global_reactive_power))
#using datatable
system.time(data[, c("Global") := .(Global_active_power*Global_reactive_power)])
system.time(write.csv(data,"data.csv"))
system.time(write_csv(data,"data.csv"))
system.time(fwrite(data,"data.csv"))
# Sample timing data (replace with your actual data)
timing_data <- data.frame(
user = c(2.79, 0.16, 2.34),
system = c(0.05, 0.04, 0.18),
elapsed = c(1.10, 0.39, 3.24),
Package = c("A", "B", "C")
)
# Convert the time values to formatted strings (adjust format as needed)
timing_data$user <- sprintf("%.2f", timing_data$user)
timing_data$system <- sprintf("%.2f", timing_data$system)
timing_data$elapsed <- sprintf("%.2f", timing_data$elapsed)
# Load the required library
library(reactable)
# Create a Reactable table
reactable(
timing_data,
columns = list(
user = colDef(align = "right"),
system = colDef(align = "right"),
elapsed = colDef(align = "right"),
Package = colDef(align = "center")
)
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
data.frame(
system.time(readr::read_csv("Data/household_power_consumption.csv"))
# Reading dataset using data.table fread() function
system.time(fread("Data/household_power_consumption.csv"))
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
data.frame(
system.time(readr::read_csv("Data/household_power_consumption.csv"))
# Reading dataset using data.table fread() function
system.time(fread("Data/household_power_consumption.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
system.time(readr::read_csv("Data/household_power_consumption.csv"))
# Reading dataset using data.table fread() function
system.time(fread("Data/household_power_consumption.csv"))
# Reading dataset using  utils read.csv() function
system.time(utils::read.csv("Data/household_power_consumption.csv"))
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
system.time(readr::read_csv("Data/household_power_consumption.csv")) %>% as.data.frame()
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
data.frame(system.time(readr::read_csv("Data/household_power_consumption.csv")))
library(dplyr)
library(data.table)
library(readr)
library(tidytable)
# Reading dataset using readr read_csv() function
system.time(readr::read_csv("Data/household_power_consumption.csv"))
# Reading dataset using data.table fread() function
system.time(fread("Data/household_power_consumption.csv"))
# Reading dataset using  utils read.csv() function
system.time(utils::read.csv("Data/household_power_consumption.csv"))
ui <- fluidPage(
column(6, plotOutput("hist1")),
column(6, plotOutput("hist2"))
)
library(shiny)
ui <- fluidPage(
column(6, plotOutput("hist1")),
column(6, plotOutput("hist2"))
)
server <- function(input, output) {
output$hist1 <- renderPlot({
# Create and render histogram 1
})
output$hist2 <- renderPlot({
# Create and render histogram 2
})
}
histModuleUI <- function(id) {
ns <- NS(id)
plotOutput(ns("hist"))
}
histModule <- function(input, output, session) {
output$hist <- renderPlot({
# Create and render histogram
})
}
ui <- fluidPage(
histModuleUI("hist1"),
histModuleUI("hist2")
)
server <- function(input, output) {
callModule(histModule, "hist1")
callModule(histModule, "hist2")
}
setwd("~/ISL_Football/ISL-Dashboard-Football")
